// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: file.sql

package db

import (
	"context"
)

const createFile = `-- name: CreateFile :one
INSERT INTO files (
  file_name,
  owner,
  chunk_count
) VALUES (
  $1, $2, $3
) RETURNING hash, file_name, owner, chunk_count
`

type CreateFileParams struct {
	FileName   string `json:"file_name"`
	Owner      string `json:"owner"`
	ChunkCount int64  `json:"chunk_count"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) (File, error) {
	row := q.db.QueryRowContext(ctx, createFile, arg.FileName, arg.Owner, arg.ChunkCount)
	var i File
	err := row.Scan(
		&i.Hash,
		&i.FileName,
		&i.Owner,
		&i.ChunkCount,
	)
	return i, err
}

const getFile = `-- name: GetFile :one
SELECT hash, file_name, owner, chunk_count FROM files
WHERE hash = $1 LIMIT 1
`

func (q *Queries) GetFile(ctx context.Context, hash string) (File, error) {
	row := q.db.QueryRowContext(ctx, getFile, hash)
	var i File
	err := row.Scan(
		&i.Hash,
		&i.FileName,
		&i.Owner,
		&i.ChunkCount,
	)
	return i, err
}
